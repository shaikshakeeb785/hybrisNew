INSERT_UPDATE Script; code[unique=true];content
                    ;myFirstDynamicScript;println 'Welcome to Dynamic Scripting Job! '+ new Date()


INSERT_UPDATE ScriptingJob; code[unique=true];scriptURI
                          ;myFirstDynamicScriptJob;model://myFirstDynamicScript


INSERT_UPDATE CronJob; code[unique=true];job(code);singleExecutable;sessionLanguage(isocode)
                     ;myFirstDynamicScriptCronJob;myFirstDynamicScriptJob;true;en

def dynamicCJ = cronJobService.getCronJob("myFirstDynamicScriptCronJob")
cronJobService.performCronJob(dynamicCJ,true)

INSERT_UPDATE Trigger;cronjob(code)[unique=true];cronExpression
                     ;myFirstDynamicScriptCronJob; 0 0 * ? * * *












import de.hybris.platform.servicelayer.internal.model.ScriptingJobModel;
import de.hybris.platform.cronjob.model.CronJobModel;

scriptName = "myFirstNendrasysGroovyScript"
CRONJOBNAME="myHacScriptCronJob1";
MYHACSCRIPTJOBNAME = "myHacScriptJob1"
def scriptingJob = null;
def myHacScriptDynamicCronJob = null;
scriptingJobResults = flexibleSearchService.search("select {pk} from {ScriptingJob} where {code} = '"+MYHACSCRIPTJOBNAME+"'").getResult();
if (scriptingJobResults.size()>0) { scriptingJob = scriptingJobResults.get(0) }
else {
scriptingJob = modelService.create(ScriptingJobModel.class);
scriptingJob.setCode(MYHACSCRIPTJOBNAME);
scriptingJob.setScriptURI("model://"+scriptName);
modelService.save(scriptingJob);
}

try {
myHacScriptDynamicCronJob = cronJobService.getCronJob(CRONJOBNAME);
} catch (de.hybris.platform.servicelayer.exceptions.UnknownIdentifierException e) {
myHacScriptDynamicCronJob = modelService.create(CronJobModel.class);
myHacScriptDynamicCronJob.setCode(CRONJOBNAME);
myHacScriptDynamicCronJob.setJob(scriptingJob);
myHacScriptDynamicCronJob.setActive(true);
myHacScriptDynamicCronJob.setSingleExecutable(true);
myHacScriptDynamicCronJob.setLogToFile(true);
modelService.save(myHacScriptDynamicCronJob);
}
dynamicCJ = cronJobService.getCronJob(CRONJOBNAME)
cronJobService.performCronJob(dynamicCJ,true)